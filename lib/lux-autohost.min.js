/**
 * lux-autohost - Action Creator API for submitting logging & metrics to autohost from lux.js apps.
 * Author: Jim Cowart
 * Version: v0.0.1
 * Url: https://github.com/LeanKit-Labs/lux-autohost
 * License(s): MIT Copyright (c) 2015 LeanKit
 */
(function(t,n){"function"==typeof define&&define.amd?define(["lux.js","postal","machina","lodash","moment"],n):"object"==typeof module&&module.exports?module.exports=n(require("lux.js"),require("postal"),require("machina"),require("lodash"),require("moment")):t.lux=n(t.lux,t.postal,t.machina,t._,t.moment)})(this,function(t,n,e,i,r){function o(t){return t&&i.merge(m,t),m}function a(t,n){return{msg:n,timestamp:r.utc().toISOString(),type:t,level:d.indexOf(t)+1}}function c(n,e){t.publishAction("sendLogEntry",a(n,e))}function s(t,n,e,i,o){return{type:t,key:n,timestamp:r.utc().toISOString(),value:e,units:i}}function u(t){return-1===x.indexOf(t)&&(!m.filter.include&&-1===m.filter.actions.indexOf(t)||m.filter.include&&m.filter.actions.indexOf(t)>-1)}function l(){var n,e,i=Array.from(arguments);return t.getContextKey?t.getContextKey.apply(t,arguments):(n=window.location.host.replace(/\./gi,"-"),e=window.location.pathname.replace(/\//gi,"-"),e="-"===e[0]?e.slice(1):e,[n,e].concat(i).join("."))}var m={actionChannel:n.channel("lux.action"),filter:{include:!1,actions:[]},metrics:{timeout:3e4,messages:500},logging:{timeout:5e3,messages:25}};t.customActionCreator({sendLogBatch:function(){var t=Array.from(arguments);m.actionChannel.publish({topic:"execute.sendLogBatch",data:{actionType:"sendLogBatch",actionArgs:t}})},sendMetricsBatch:function(){var t=Array.from(arguments);m.actionChannel.publish({topic:"execute.sendMetricsBatch",data:{actionType:"sendMetricsBatch",actionArgs:t}})}});var d=["error","warn","info","debug"],h=i.reduce(d,function(t,n){return t[n]=function(t){return c(n,t)},t},{});t.customActionCreator(h),t.addToActionGroup("logging",d);var f={meter:function(n,e,i,r){t.publishAction("sendMetricsEntry",s("meter",n,e,i,r))},timer:function(n,e,i){t.publishAction("sendMetricsEntry",s("timer",n,e,"ms",i))}};t.customActionCreator(f),t.addToActionGroup("metrics",["meter","timer"]);var g={action:"sendMetricsBatch",queue:[],config:m.metrics},p={action:"sendLogBatch",queue:[],config:m.logging},y=new e.BehavioralFsm({initialState:"queueing",states:{queueing:{_onEnter:function(t){var n=this;t.timeout=setTimeout(function(){return n.handle(t,"transmit")},t.config.timeout)},queueEntry:function(t,n){t.queue.push(n),t.queue.length>=t.config.messages&&this.transition(t,"transmitting")},transmit:"transmitting"},transmitting:{_onEnter:function(t){clearTimeout(t.timeout),this.handle(t,"transmit")},transmit:function(n){if(n.queue.length){var e=n.queue;n.queue=[],t.publishAction(n.action,e)}this.transition(n,"queueing")}}}}),q=t.actionListener({handlers:{sendLogEntry:function(t){y.handle(p,"queueEntry",t)},sendMetricsEntry:function(t){y.handle(g,"queueEntry",t)}}}),x=["sendLogEntry","sendMetricsEntry","sendLogBatch","sendMetricsBatch"],E=new e.Fsm({initialize:function(){var n=this;t.dispatcher.on("handling",function(t){"action.dispatch"===t.inputType&&n.handle("start",t.client.action.actionType)}),t.dispatcher.on("transition",function(t){"ready"===t.toState&&n.handle("dispatcher.complete")})},initialState:"ready",states:{ready:{_onEnter:function(){this.current={}},start:function(t){var n=this;u(t)&&(this.current={name:t,start:r.utc(),key:l(t)},setTimeout(function(){return n.handle("action.complete")},0),this.transition("processing"))}},processing:{_onEnter:function(){f.meter(this.current.key,1,"count",{})},"action.complete":"ready","*":function(){this.deferUntilTransition()},_onExit:function(){f.timer(this.current.key,r.utc().diff(this.current.start),{})}}}});return{config:o,actionProcessor:E,batchManager:y,batchListener:q,metricsClient:g,loggingClient:p}});